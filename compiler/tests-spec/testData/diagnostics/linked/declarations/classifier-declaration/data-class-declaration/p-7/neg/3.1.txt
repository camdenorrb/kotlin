package

public fun case1(/*0*/ d: Data1): kotlin.Unit
public fun case2(/*0*/ d: Data2): kotlin.Unit
public fun case3(/*0*/ d: Data3): kotlin.Unit
public fun case4(/*0*/ d: Data4): kotlin.Unit
public fun case5(/*0*/ d: Data5): kotlin.Unit

public open class Base1 {
    public constructor Base1()
    public open fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): kotlin.Any
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class Base2 {
    public constructor Base2()
    public open fun component1(): kotlin.Any
    public open fun component2(): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class Base3 {
    public constructor Base3()
    public open fun component1(): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class Base4 {
    public constructor Base4()
    public final fun component1(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class Base5 {
    public constructor Base5()
    public final fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): kotlin.Any
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public final data class Data1 : Base1 {
    public constructor Data1(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...)
    public final val x: kotlin.Int
    public final val y: kotlin.String
    public final operator /*synthesized*/ fun component1(): kotlin.Int
    public final operator /*synthesized*/ fun component2(): kotlin.String
    public final override /*1*/ /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): Data1
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}

public final data class Data2 : Base2 {
    public constructor Data2(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...)
    public final val x: kotlin.Int
    public final val y: kotlin.String
    public final override /*1*/ operator /*synthesized*/ fun component1(): kotlin.Int
    public final override /*1*/ operator /*synthesized*/ fun component2(): kotlin.String
    public final /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): Data2
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}

public final data class Data3 : Base3 {
    public constructor Data3(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...)
    public final val x: kotlin.Int
    public final val y: kotlin.String
    public final override /*1*/ operator /*synthesized*/ fun component1(): kotlin.Int
    public final operator /*synthesized*/ fun component2(): kotlin.String
    public final /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): Data3
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}

public final data class Data4 : Base4 {
    public constructor Data4(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...)
    public final val x: kotlin.Int
    public final val y: kotlin.String
    public final override /*1*/ operator /*synthesized*/ fun component1(): kotlin.Int
    public final operator /*synthesized*/ fun component2(): kotlin.String
    public final /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): Data4
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}

public final data class Data5 : Base5 {
    public constructor Data5(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...)
    public final val x: kotlin.Int
    public final val y: kotlin.String
    public final operator /*synthesized*/ fun component1(): kotlin.Int
    public final operator /*synthesized*/ fun component2(): kotlin.String
    public final override /*1*/ /*synthesized*/ fun copy(/*0*/ x: kotlin.Int = ..., /*1*/ y: kotlin.String = ...): Data5
    public open override /*1*/ /*synthesized*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*synthesized*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*synthesized*/ fun toString(): kotlin.String
}
