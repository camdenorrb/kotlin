package

public open class BaseCase1 {
    public constructor BaseCase1(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.CharSequence)
    public final val a: kotlin.Int
    public final val b: kotlin.CharSequence
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ /*fake_override*/ fun toString(): kotlin.String
}

public open class BaseCase2 {
    public constructor BaseCase2(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.CharSequence)
    public final val a: kotlin.Int
    public final val b: kotlin.CharSequence
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ fun toString(): kotlin.String
}

public open class BaseCase3 {
    public constructor BaseCase3(/*0*/ a: kotlin.Int, /*1*/ b: kotlin.CharSequence)
    public final val a: kotlin.Int
    public final val b: kotlin.CharSequence
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final override /*1*/ fun toString(): kotlin.String
}

public open class ChildCase1 : BaseCase1 {
    public constructor ChildCase1()
    public final override /*1*/ /*fake_override*/ val a: kotlin.Int
    public final override /*1*/ /*fake_override*/ val b: kotlin.CharSequence
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final override /*1*/ fun toString(): kotlin.String
}

public open class ChildCase2 : BaseCase2 {
    public constructor ChildCase2()
    public final override /*1*/ /*fake_override*/ val a: kotlin.Int
    public final override /*1*/ /*fake_override*/ val b: kotlin.CharSequence
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public open override /*1*/ fun toString(): kotlin.String
}

public open class ChildCase3 : BaseCase3 {
    public constructor ChildCase3()
    public final override /*1*/ /*fake_override*/ val a: kotlin.Int
    public final override /*1*/ /*fake_override*/ val b: kotlin.CharSequence
    public open override /*1*/ /*fake_override*/ fun equals(/*0*/ other: kotlin.Any?): kotlin.Boolean
    public open override /*1*/ /*fake_override*/ fun hashCode(): kotlin.Int
    public final override /*1*/ fun toString(): kotlin.String
}
